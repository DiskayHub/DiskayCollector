// <auto-generated />
using System;
using DiskayCollector.Postgres;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DiskayCollector.Postgres.Migrations
{
    [DbContext(typeof(DayItemsDbContext))]
    partial class DayItemsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DiskayCollector.Core.Models.DayScheduleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("MainGroup")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DaySchedules");
                });

            modelBuilder.Entity("DiskayCollector.Core.Models.ItemEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DayScheduleId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time without time zone");

                    b.HasKey("Id");

                    b.HasIndex("DayScheduleId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("DiskayCollector.Core.Models.SubGroupItemEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SubGroup")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("SubGroupItems");
                });

            modelBuilder.Entity("DiskayCollector.Core.Models.ItemEntity", b =>
                {
                    b.HasOne("DiskayCollector.Core.Models.DayScheduleEntity", "DaySchedule")
                        .WithMany("Items")
                        .HasForeignKey("DayScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DaySchedule");
                });

            modelBuilder.Entity("DiskayCollector.Core.Models.SubGroupItemEntity", b =>
                {
                    b.HasOne("DiskayCollector.Core.Models.ItemEntity", "Item")
                        .WithMany("SubGroupsItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("DiskayCollector.Core.Models.DayScheduleEntity", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("DiskayCollector.Core.Models.ItemEntity", b =>
                {
                    b.Navigation("SubGroupsItems");
                });
#pragma warning restore 612, 618
        }
    }
}
